{"ast":null,"code":"import { FormServiceService } from \"../form-service.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../form-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction DynamicFormComponentComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DynamicFormComponentComponent_div_1_div_1_Template, 4, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"text\");\n  }\n}\n\nexport let DynamicFormComponentComponent = /*#__PURE__*/(() => {\n  class DynamicFormComponentComponent {\n    constructor(formService) {\n      this.formService = formService;\n      this.formGroupMap = {};\n    }\n\n    onFormSubmission() {\n      throw new Error('Method not implemented.');\n    }\n\n    ngOnInit() {\n      this.formService.getFormStructure().subscribe(formContent => {\n        console.log(formContent);\n        this.formContent = formContent;\n        this.intializeFormGroup(formContent);\n      });\n    }\n\n    intializeFormGroup(formContent) {\n      formContent.forEach(formTypeControl => {\n        if (formTypeControl.validations.length > 0) {\n          this.formControlValidators = formTypeControl.validations.reduce((acc, currentvalue) => {\n            if (currentvalue.name === \"required\") {\n              acc.push(Validators.required);\n            }\n\n            return acc;\n          }, []);\n        }\n\n        this.formGroupMap[formTypeControl.name] = new FormControl(formTypeControl.value, this.formControlValidators);\n      });\n      this.dynamicFormGroup = new FormGroup();\n    }\n\n  }\n\n  DynamicFormComponentComponent.ɵfac = function DynamicFormComponentComponent_Factory(t) {\n    return new (t || DynamicFormComponentComponent)(i0.ɵɵdirectiveInject(i1.FormServiceService));\n  };\n\n  DynamicFormComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormComponentComponent,\n    selectors: [[\"app-dynamic-form-component\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"formGroupName\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [3, \"for\"], [\"type\", \"text\", 3, \"name\", \"id\", \"formControlName\"]],\n    template: function DynamicFormComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponentComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onFormSubmission();\n        });\n        i0.ɵɵtemplate(1, DynamicFormComponentComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelement(2, \"button\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroupName\", ctx.dynamicFormGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formContent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.dynamicFormGroup == null ? null : ctx.dynamicFormGroup.valid);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormControlName, i3.FormGroupName]\n  });\n  return DynamicFormComponentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}