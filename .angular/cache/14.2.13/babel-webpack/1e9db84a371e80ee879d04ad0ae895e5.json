{"ast":null,"code":"import { FormServiceService } from \"../form-service.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../form-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction DynamicFormComponentComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 8);\n    i0.ɵɵelementStart(2, \"label\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const option_r13 = ctx.$implicit;\n    const control_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name)(\"value\", option_r13.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r13.label);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, DynamicFormComponentComponent_div_4_div_4_div_3_Template, 4, 6, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", control_r1.options);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_5_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r18.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r18.label, \" \");\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 9);\n    i0.ɵɵtemplate(4, DynamicFormComponentComponent_div_4_div_5_option_4_Template, 2, 2, \"option\", 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name)(\"value\", control_r1.options[0].value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", control_r1.options);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", control_r1.name)(\"id\", control_r1.name)(\"formControlName\", control_r1.name);\n  }\n}\n\nfunction DynamicFormComponentComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DynamicFormComponentComponent_div_4_div_1_Template, 4, 5, \"div\", 3);\n    i0.ɵɵtemplate(2, DynamicFormComponentComponent_div_4_div_2_Template, 4, 5, \"div\", 3);\n    i0.ɵɵtemplate(3, DynamicFormComponentComponent_div_4_div_3_Template, 4, 5, \"div\", 3);\n    i0.ɵɵtemplate(4, DynamicFormComponentComponent_div_4_div_4_Template, 4, 3, \"div\", 3);\n    i0.ɵɵtemplate(5, DynamicFormComponentComponent_div_4_div_5_Template, 5, 7, \"div\", 3);\n    i0.ɵɵtemplate(6, DynamicFormComponentComponent_div_4_div_6_Template, 4, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"textarea\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"number\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"radio\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"checkbox\");\n  }\n}\n\nexport let DynamicFormComponentComponent = /*#__PURE__*/(() => {\n  class DynamicFormComponentComponent {\n    constructor(formService) {\n      this.formService = formService;\n      this.formGroupMap = {};\n      this.formService.getFormStructure().subscribe(formContent => {\n        console.log(formContent);\n        this.formContent = formContent;\n        this.intializeFormGroup(formContent);\n      });\n    }\n\n    onFormSubmission() {\n      console.log(this.dynamicFormGroup.value);\n    }\n\n    ngAfterViewInit() {}\n\n    intializeFormGroup(formContent) {\n      formContent.forEach(formTypeControl => {\n        if (formTypeControl.type != \"formGroup\") {\n          if ((formTypeControl === null || formTypeControl === void 0 ? void 0 : formTypeControl.validations.length) > 0) {\n            this.formControlValidators = formTypeControl.validations.reduce((acc, currentvalue) => {\n              if (currentvalue.name === \"required\") {\n                acc.push(Validators.required);\n              }\n\n              return acc;\n            }, []);\n          }\n\n          this.formGroupMap[formTypeControl.name] = new FormControl(formTypeControl.value || \"\", this.formControlValidators);\n        } else {\n          formTypeControl.value.reduce((acc, v) => {\n            acc[v.name] = new FormControl(v.value || \"\");\n            return acc;\n          }, {});\n          this.formGroupMap[formTypeControl.name] = new FormGroup({});\n        }\n      });\n      this.dynamicFormGroup = new FormGroup(this.formGroupMap);\n      this.dynamicFormGroup.valueChanges.subscribe(v => {\n        console.log(\"Value Changes\");\n        console.log(v);\n      });\n      this.dynamicFormGroup.statusChanges.subscribe(v => {\n        console.log(\"Status Changes\");\n        console.log(v);\n      });\n    }\n\n  }\n\n  DynamicFormComponentComponent.ɵfac = function DynamicFormComponentComponent_Factory(t) {\n    return new (t || DynamicFormComponentComponent)(i0.ɵɵdirectiveInject(i1.FormServiceService));\n  };\n\n  DynamicFormComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormComponentComponent,\n    selectors: [[\"app-dynamic-form-component\"]],\n    decls: 7,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [3, \"for\"], [\"type\", \"text\", 3, \"name\", \"id\", \"formControlName\"], [\"type\", \"textarea\", 3, \"name\", \"id\", \"formControlName\"], [\"type\", \"number\", 3, \"name\", \"id\", \"formControlName\"], [\"type\", \"radio\", 3, \"name\", \"id\", \"formControlName\", \"value\"], [\"type\", \"select\", 3, \"name\", \"id\", \"formControlName\", \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"checkbox\", 3, \"name\", \"id\", \"formControlName\"]],\n    template: function DynamicFormComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Dynamic form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponentComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onFormSubmission();\n        });\n        i0.ɵɵtext(3);\n        i0.ɵɵtemplate(4, DynamicFormComponentComponent_div_4_Template, 7, 6, \"div\", 1);\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵtext(6, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.dynamicFormGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dynamicFormGroup == null ? null : ctx.dynamicFormGroup.valid, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formContent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !(ctx.dynamicFormGroup == null ? null : ctx.dynamicFormGroup.valid));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return DynamicFormComponentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}